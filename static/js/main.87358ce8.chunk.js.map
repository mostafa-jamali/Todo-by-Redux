{"version":3,"sources":["Redux/Todo/Todo.reducer.js","Redux/RootReducer.js","Redux/store.js","Component/Search/Search.jsx","Redux/Todo/Todo.types.js","Component/ToggleTextCard/ToggleTextCard.jsx","Redux/Todo/Todo.action.js","Component/CardTodo/CardTodo.jsx","Component/DoneList/DoneList.jsx","Component/AddTodo/AddTodo.jsx","Component/Todo/Todo.jsx","view/TodoArchive/TodoArchive.jsx","App.js","serviceWorker.js","Component/Theme/Theme.js","index.js"],"names":["initialState","todo_List","id","title","text","checkList","status","todoReducer","state","action","type","payload","filter","item","map","todoId","check","itemId","combineReducers","todoList","middlewares","logger","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","RootReducer","store","createStore","applyMiddleware","persistor","persistStore","Search","search","handleChange","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","elevation","Form","className","FormGroup","Input","name","value","placeholder","onChange","connect","changeCheckItemStatus","types","checkItem","checked","useStyles","makeStyles","theme","root","margin","spacing","toggleButton","background","borderRadius","border","color","boxShadow","dropDownButton","StyledMenu","withStyles","paper","props","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","backgroundColor","palette","primary","main","common","white","MenuItem","deleteTodo","classes","useState","toggleId","setToggleId","toggleShow","setToggleShow","openModal","setOpenModal","toggleModal","setAnchorEl","anchorEl","Col","Zoom","style","transitionDelay","Card","CardHeader","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","to","ListItemText","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","variant","CardBody","CardTitle","DoneList","length","addTodo","todo","editTodo","history","useHistory","useParams","editObject","useSelector","find","todos","setTodos","setCheckItem","target","onSubmit","preventDefault","push","Label","htmlFor","e","CardFooter","marginTop","marginBottom","borderButIcon","borderRight","butIcon","setSearch","searchTodo","toLowerCase","startsWith","React","setValue","setChecked","handleChangeCheck","BottomNavigation","newValue","showLabels","BottomNavigationAction","component","Link","label","icon","path","Row","xs","lg","TodoArchive","App","loading","window","location","hostname","match","myTheme","createMuiTheme","overrides","MuiButton","paddingTop","lineHeight","letterSpacing","typography","button","textTransform","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.87358ce8.chunk.js","sourcesContent":["const initialState = {\r\n    todo_List: [\r\n        {\r\n            id: 1,\r\n            title: \"University\",\r\n            text: \"Study\",\r\n            checkList: [\r\n                { id: 1, text: \"mathematics\", status: false },\r\n                { id: 2, text: \"static\", status: true },\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Home\",\r\n            text: \"Routine works\",\r\n            checkList: [\r\n                { id: 1, text: \"buy\", status: false },\r\n                { id: 2, text: \"rest\", status: false },\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Work\",\r\n            text: \"Meetting\",\r\n            checkList: [\r\n                { id: 1, text: \"salary and benefits\", status: false },\r\n                { id: 2, text: \"vacations\", status: false },\r\n            ]\r\n        }\r\n    ]\r\n}\r\nconst todoReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case (\"ADD_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: [...state.todo_List, payload]\r\n            }\r\n        case (\"DELETE_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.filter(item => item.id !== payload)\r\n            }\r\n        case (\"EDIT_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.map(item => item.id == payload.id ? payload: item)\r\n            }\r\n        case (\"CHANGE_ITEM_STATUS\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.map(item => item.id == payload.todoId ?\r\n                    {\r\n                        ...item, checkList: item.checkList.map(check => check.id == payload.itemId ?\r\n                            { ...check, status: !check.status } : check)\r\n                    } : item)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './Todo/Todo.reducer';\r\n\r\nexport default combineReducers({\r\n    todoList: todoReducer,\r\n})","import { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger';\r\n\r\nimport RootReducer from './RootReducer';\r\n\r\nconst middlewares = [logger];\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [\"todoList\"]\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, RootReducer)\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\nexport default store;\r\n\r\nexport const persistor = persistStore(store)","import React from 'react'\r\nimport { Form, FormGroup, Input } from 'reactstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Search({ search, handleChange }) {\r\n    return (\r\n        <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\r\n            <Paper elevation={0}>\r\n                <Form className=\"py-2 px-3 mx-sm-5 mx-md-5 rounded bg-info\">\r\n                    <FormGroup>\r\n                        <Input className=\"my-3\" type='search' id='search' name={'search'} value={search} placeholder=\"Search todo\" onChange={handleChange} />\r\n                    </FormGroup>\r\n                </Form>\r\n            </Paper>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","\r\nexport default {\r\n    ADD_TODO: \"ADD_TODO\",\r\n    DELETE_TODO: \"DELETE_TODO\",\r\n    EDIT_TODO: \"EDIT_TODO\",\r\n    CHANGE_ITEM_STATUS: \"CHANGE_ITEM_STATUS\"\r\n}","import React, { useState } from 'react';\r\nimport { FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport {changeCheckItemStatus} from '../../Redux/Todo/Todo.action'\r\nimport './ToggleTextCard.css'\r\n\r\nfunction ToggleTextCard({ item, checkItem,changeCheckItemStatus }) {\r\n\r\n    return (\r\n        <li className=\"liToggle\">\r\n            <FormGroup check>\r\n                <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" onChange={() => changeCheckItemStatus(item.id, checkItem.id)} checked={checkItem.status} />\r\n                {checkItem.status ? <del>{checkItem.text}</del> : checkItem.text}\r\n            </FormGroup>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default connect(null, {changeCheckItemStatus})(ToggleTextCard);\r\n","import types from './Todo.types';\r\n\r\n\r\nexport const addTodo = (todo) => {\r\n    return {\r\n        type: types.ADD_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: types.DELETE_TODO,\r\n        payload: id\r\n    }\r\n}\r\nexport const editTodo = (todo) => {\r\n    return {\r\n        type: types.EDIT_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nexport const changeCheckItemStatus = (todoId, itemId) => {\r\n    return {\r\n        type: types.CHANGE_ITEM_STATUS,\r\n        payload: {todoId, itemId}\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardBody, CardTitle, Col, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport ToggleTextCard from '../ToggleTextCard/ToggleTextCard';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo } from '../../Redux/Todo/Todo.action';\r\nimport './CardTodo.css'\r\n\r\n//material ui\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    toggleButton: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 10%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    dropDownButton: {\r\n        background: 'linear-gradient(45deg, #2196F3 10%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n    }\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nfunction CardTodo({ item, deleteTodo }) {\r\n    const classes = useStyles();\r\n\r\n    const [toggleId, setToggleId] = useState(null)\r\n    const [toggleShow, setToggleShow] = useState(false)\r\n    const toggleButton = (id) => {\r\n        setToggleId(id);\r\n        setToggleShow(!toggleShow)\r\n    }\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const toggleModal = () => {\r\n        setOpenModal(!openModal)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Col className=\"py-3 px-0 p-md-3\">\r\n            <Zoom in={true} style={{ transitionDelay: true ? `${(item.id) * 300}ms` : '0ms' }}>\r\n                <Paper elevation={0}>\r\n                    <Card>\r\n                        <CardHeader className=\"d-flex justify-content-between\">\r\n                            <h4 className=\"my-auto\">{item.title}</h4>\r\n                            <div>\r\n                                <Button aria-controls=\"customized-menu\" aria-haspopup=\"true\" className={classes.dropDownButton} onClick={handleClick} >\r\n                                    Edit / Delete\r\n                        </Button>\r\n                                <StyledMenu id=\"customized-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} >\r\n                                    <StyledMenuItem>\r\n                                        <ListItemIcon>\r\n                                            <EditIcon fontSize=\"small\" />\r\n                                        </ListItemIcon>\r\n                                        <Link to={`/edit/${item.id}`} className=\"editDropdownItem\"><ListItemText primary=\"Edit todo\" /></Link>\r\n                                    </StyledMenuItem>\r\n                                    <StyledMenuItem>\r\n                                        <ListItemIcon>\r\n                                            <DeleteOutlinedIcon fontSize=\"small\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText onClick={toggleModal} primary=\"Delete todo\" />\r\n                                    </StyledMenuItem>\r\n                                </StyledMenu>\r\n                            </div>\r\n                        </CardHeader>\r\n\r\n                        <Modal isOpen={openModal} toggle={toggleModal}>\r\n                            <ModalHeader className=\"bg-warning\" toggle={toggleModal}>Delete todo</ModalHeader>\r\n                            <ModalBody>\r\n                                <h5>Are you sure delete this todo?</h5>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteTodo(item.id)} className={classes.root} >Delete</Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={toggleModal}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n\r\n                        <CardBody>\r\n                            <CardTitle><h5>{item.text}</h5></CardTitle>\r\n                            <Button onClick={() => toggleButton(item.id)} className={`${classes.toggleButton} mb-3`}>Toggle items</Button>\r\n                            {\r\n                                toggleId == item.id && toggleShow ?\r\n                                    <ol>\r\n                                        {item.checkList.map(checkItem =>\r\n                                            <ToggleTextCard item={item} checkItem={checkItem} key={checkItem.id} />\r\n                                        )}\r\n                                    </ol>\r\n                                    : <div></div>\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Paper>\r\n            </Zoom>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default connect(null, { deleteTodo })(CardTodo);\r\n","import React from 'react';\r\n\r\nfunction DoneList({ item }) {\r\n    return (\r\n        <div>\r\n            {item.checkList.map(checkItem =>\r\n                checkItem.status ? <li key={checkItem.id}>{checkItem.text}</li> : null\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoneList\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Form, Input, FormGroup, Label, Button, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { useSelector } from 'react-redux'\r\nimport { connect } from 'react-redux';\r\nimport { addTodo, editTodo } from '../../Redux/Todo/Todo.action';\r\n\r\nfunction AddTodo({ addTodo, length, editTodo }) {\r\n    const history = useHistory();\r\n    const { todoId } = useParams();\r\n\r\n    const editObject = useSelector(state => state.todoList.todo_List.find(item => item.id == todoId)) //todoId = useParams\r\n    const [todos, setTodos] = useState(editObject ? { title: editObject.title, text: editObject.text } : {\r\n        title: \"\",\r\n        text: \"\",\r\n    })\r\n\r\n    const [checkItem, setCheckItem] = useState(editObject ? editObject.checkList : [{\r\n        id: 1,\r\n        text: \"\",\r\n        status: false\r\n    }])\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setTodos({ ...todos, [name]: value })\r\n    }\r\n    const handleChangeItem = (event, id) => {\r\n        setCheckItem(checkItem.map(item => item.id == id ? { ...item, text: event.target.value } : item))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        editObject && editTodo({ id: editObject.id, ...todos, checkList: checkItem });\r\n\r\n        !editObject && addTodo({ id: length + 1, ...todos, checkList: checkItem })\r\n\r\n        history.push('/')\r\n    }\r\n    const addCheckItem = () => {\r\n        setCheckItem([...checkItem, { id: checkItem.length + 1, text: checkItem.text, status: false }])\r\n    }\r\n    const handleClear = () => {\r\n        // setTodos({\r\n        //     title: \"\",\r\n        //     text: \"\",\r\n        // })\r\n    }\r\n    return (\r\n        <Form className=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-4 mx-auto p-3\" onSubmit={handleSubmit}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"title\" className=\"mb-0\">Title:</Label>\r\n                        <Input placeholder='title' type=\"text\" name='title' id='title' className=\"text-info\" value={todos.title} onChange={handleChange} />\r\n                    </FormGroup>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"text\" className=\"mb-0\">Text:</Label>\r\n                        <Input placeholder='text' type=\"text\" name='text' id='text' className=\"text-info\" value={todos.text} onChange={handleChange} />\r\n                    </FormGroup>\r\n                    {checkItem.map(item =>\r\n                        <div key={item.id}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"checkItem\" className=\"mb-0\">Check list {item.id}</Label>\r\n                                <Input placeholder={`Check list ${item.id}`} type=\"text\" name='checkItem' id='checkItem' className=\"text-info\" value={item.text} onChange={(e) => handleChangeItem(e, item.id)} />\r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <Button color='success' className=\"border\" type=\"submit\">save</Button> {' '}\r\n                    <Button color='primary' className=\"border\" type=\"button\" onClick={addCheckItem} >add check list</Button> {' '}\r\n                    <Button type=\"reset\" className=\"border\" onClick={handleClear}>clear</Button>\r\n                </CardFooter>\r\n\r\n\r\n\r\n            </Card>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        length: state.todoList.todo_List.length,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { addTodo, editTodo })(AddTodo);","import React, { useState } from 'react'\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Row, Card, CardHeader, CardBody } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport Search from '../Search/Search'\r\nimport CardTodo from '../CardTodo/CardTodo';\r\nimport DoneList from '../DoneList/DoneList';\r\nimport AddTodo from '../AddTodo/AddTodo'\r\nimport './Todo.css';\r\n\r\n//material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PlaylistAddCheckRoundedIcon from '@material-ui/icons/PlaylistAddCheckRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport PlaylistAddRoundedIcon from '@material-ui/icons/PlaylistAddRounded';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"auto\",\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    borderButIcon: {\r\n        borderRight: \"2px solid rgba(0,0,0,.03)\",\r\n    },\r\n    butIcon: {\r\n    }\r\n});\r\n\r\nfunction Todo({ todoList }) {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        setSearch(value);\r\n    }\r\n\r\n    let searchTodo = todoList.filter(item => item.title.toLowerCase().startsWith(search.toLowerCase()));\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n    const handleChangeCheck = () => {\r\n        setChecked(true);\r\n    };\r\n    return (\r\n        <div className=\"border rounded mx-lg-5\">\r\n            <Card className=\"\">\r\n                <CardHeader className=\"px-2\">\r\n                    <BottomNavigation value={value} onChange={(event, newValue) => { setValue(newValue) }} showLabels className={classes.root + \" col-12 col-sm-8 col-lg-6 col-xl-5 px-0 rounded\"} >\r\n                        <BottomNavigationAction component={Link} to=\"/todoList/\" className={classes.borderButIcon + \" px-0 px-sm-3\"} label=\"TodoList\" icon={<PlaylistAddCheckRoundedIcon />} />\r\n                        <BottomNavigationAction component={Link} to=\"/doneList/\" onClick={handleChangeCheck} className={classes.borderButIcon + \" px-0 px-sm-3\"} label=\"DoneList\" icon={<DoneAllRoundedIcon />} />\r\n                        <BottomNavigationAction component={Link} to=\"/searchTodo/\" className={classes.borderButIcon + \" px-0 px-sm-3\"} label=\"Search\" icon={<SearchRoundedIcon />} />\r\n                        <BottomNavigationAction component={Link} to=\"/add/\" onClick={handleChangeCheck} className={classes.butIcon + \" px-0 px-sm-3\"} label=\"Add todo\" icon={<PlaylistAddRoundedIcon />} />\r\n                    </BottomNavigation>\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"py-3\">\r\n                    <Switch>\r\n                        <Route path={\"/searchTodo/\"}>\r\n                            <Search handleChange={handleChange} search={search} />\r\n                            <Row className=\"justify-content-left px-sm-5\" xs={1} lg={2}>\r\n                                {\r\n                                    searchTodo.map(item =>\r\n                                        <CardTodo item={item} key={item.id} />\r\n                                    )\r\n                                }\r\n                            </Row>\r\n                        </Route>\r\n                        <Route path={\"/todoList/\"}>\r\n                            <Row className=\"justify-content-left px-sm-5\" xs={1} lg={2}>\r\n                                {\r\n                                    searchTodo.map(item =>\r\n                                        <CardTodo item={item} key={item.id} />\r\n                                    )\r\n                                }\r\n                            </Row>\r\n                        </Route>\r\n                        <Route path={\"/doneList/\"}>\r\n                            <Zoom in={checked} style={{ transitionDelay: checked ? '300ms' : '0ms' }}>\r\n                                <Paper elevation={0}>\r\n                                    <Card className=\"mx-5\">\r\n                                        <CardHeader>DoneList</CardHeader>\r\n                                        <CardBody>\r\n                                            {\r\n                                                searchTodo.map(item =>\r\n                                                    <div key={item.id}>\r\n                                                        <h4 className=\"mt-4 mb-0\">{item.title}</h4>\r\n                                                        <ol>\r\n                                                            <DoneList item={item} />\r\n                                                        </ol>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Paper>\r\n                            </Zoom>\r\n                        </Route>\r\n                        <Route path={\"/add/\"}>\r\n                            <Zoom in={checked} style={{ transitionDelay: checked ? '300ms' : '0ms' }}>\r\n                                <Paper elevation={0}>\r\n                                    <AddTodo />\r\n                                </Paper>\r\n                            </Zoom>\r\n                        </Route>\r\n                        <Route path={\"/edit/:todoId/\"}>\r\n                            <Zoom in={true} style={{ transitionDelay: true ? '300ms' : '0ms' }}>\r\n                                <Paper elevation={0}>\r\n                                    <AddTodo />\r\n                                </Paper>\r\n                            </Zoom>\r\n                        </Route>\r\n                    </Switch>\r\n                </CardBody>\r\n\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoList: state.todoList.todo_List,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(Todo);\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Todo from '../../Component/Todo/Todo';\r\n\r\n\r\nfunction TodoArchive() {\r\n    return (\r\n        <Todo/>\r\n    )\r\n}\r\n\r\nexport default TodoArchive\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store, { persistor } from './Redux/store';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport TodoArchive from './view/TodoArchive/TodoArchive';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"App\">\n          <Router>\n            <div>\n              <Switch>\n                <Route path=\"/edit/:todoId\">\n                  <TodoArchive />\n                </Route>\n                <Route path=\"/\">\n                  <TodoArchive />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst myTheme = createMuiTheme({\r\n    overrides: {\r\n        MuiButton: {\r\n            label: {\r\n                color: \"#ffff\",\r\n                paddingTop: \"2px\",\r\n                lineHeight: \"1.5\",\r\n                letterSpacing: \"0\"\r\n            },\r\n        }\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: 'none',\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#1976d2',\r\n        },\r\n        secondary: {\r\n            main: \"#ff1744\"\r\n        },\r\n    },\r\n});\r\n\r\nexport default myTheme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport myTheme from './Component/Theme/Theme'\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={myTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}