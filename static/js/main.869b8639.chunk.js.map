{"version":3,"sources":["Redux/Todo/Todo.reducer.js","Redux/RootReducer.js","Redux/store.js","Component/Search/Search.jsx","Redux/Todo/Todo.types.js","Component/ToggleTextCard/ToggleTextCard.jsx","Redux/Todo/Todo.action.js","Component/CardTodo/CardTodo.jsx","Component/DoneList/DoneList.jsx","Component/Todo/Todo.jsx","view/TodoArchive/TodoArchive.jsx","view/AddTodo/AddTodo.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","todo_List","id","title","text","checkList","status","todoReducer","state","action","type","payload","filter","item","map","todoId","check","itemId","combineReducers","todoList","middlewares","logger","store","createStore","RootReducer","applyMiddleware","Search","search","handleChange","Form","className","FormGroup","Input","name","value","placeholder","onChange","connect","changeCheckItemStatus","types","checkItem","checked","deleteTodo","useState","dropdownOpen","setDropdownOpen","dropdownId","setDropdownId","toggleId","setToggleId","toggleShow","setToggleShow","Col","Card","CardHeader","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","to","onClick","CardBody","CardTitle","Button","key","DoneList","useStyles","makeStyles","root","margin","marginTop","marginBottom","borderButIcon","borderRight","butIcon","setSearch","searchTodo","toLowerCase","startsWith","classes","React","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","label","icon","target","Row","xs","lg","TodoArchive","length","addTodo","todo","editTodo","history","useHistory","useParams","editObject","useSelector","find","todos","setTodos","setCheckItem","onSubmit","preventDefault","push","Label","htmlFor","e","CardFooter","color","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.869b8639.chunk.js","sourcesContent":["const initialState = {\r\n    todo_List: [\r\n        {\r\n            id: 1,\r\n            title: \"title1\",\r\n            text: \"text1\",\r\n            checkList: [\r\n                { id: 1, text: \"text1\", status: false },\r\n                { id: 2, text: \"text2\", status: true },\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"title2\",\r\n            text: \"text2\",\r\n            checkList: [\r\n                { id: 1, text: \"text1\", status: false },\r\n                { id: 2, text: \"text2\", status: false },\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"title3\",\r\n            text: \"text3\",\r\n            checkList: [\r\n                { id: 1, text: \"text1\", status: false },\r\n                { id: 2, text: \"text2\", status: false },\r\n            ]\r\n        }\r\n    ]\r\n}\r\nconst todoReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case (\"ADD_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: [...state.todo_List, payload]\r\n            }\r\n        case (\"DELETE_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.filter(item => item.id !== payload)\r\n            }\r\n        case (\"EDIT_TODO\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.map(item => item.id == payload.id ? payload: item)\r\n            }\r\n        case (\"CHANGE_ITEM_STATUS\"):\r\n            return {\r\n                ...state,\r\n                todo_List: state.todo_List.map(item => item.id == payload.todoId ?\r\n                    {\r\n                        ...item, checkList: item.checkList.map(check => check.id == payload.itemId ?\r\n                            { ...check, status: !check.status } : check)\r\n                    } : item)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './Todo/Todo.reducer';\r\n\r\nexport default combineReducers({\r\n    todoList: todoReducer,\r\n})","import { applyMiddleware, createStore } from 'redux';\r\nimport RootReducer from './RootReducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(\r\n    RootReducer,\r\n    applyMiddleware(...middlewares)\r\n)","import React from 'react'\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nfunction Search({search, handleChange}) {\r\n    return (\r\n        <Form className=\"py-2 px-3 mx-4 mx-md-5 rounded bg-info\">\r\n            <FormGroup>\r\n                <Input className=\"my-3\" type='search' id='search' name={'search'} value={search} placeholder=\"Search todo\" onChange={handleChange} />\r\n            </FormGroup>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","\r\nexport default {\r\n    ADD_TODO: \"ADD_TODO\",\r\n    DELETE_TODO: \"DELETE_TODO\",\r\n    EDIT_TODO: \"EDIT_TODO\",\r\n    CHANGE_ITEM_STATUS: \"CHANGE_ITEM_STATUS\"\r\n}","import React, { useState } from 'react';\r\nimport { FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport {changeCheckItemStatus} from '../../Redux/Todo/Todo.action'\r\nimport './ToggleTextCard.css'\r\n\r\nfunction ToggleTextCard({ item, checkItem,changeCheckItemStatus }) {\r\n\r\n    return (\r\n        <li className=\"liToggle\">\r\n            <FormGroup check>\r\n                <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" onChange={() => changeCheckItemStatus(item.id, checkItem.id)} checked={checkItem.status} />\r\n                {checkItem.status ? <del>{checkItem.text}</del> : checkItem.text}\r\n            </FormGroup>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default connect(null, {changeCheckItemStatus})(ToggleTextCard);\r\n","import types from './Todo.types';\r\n\r\n\r\nexport const addTodo = (todo) => {\r\n    return {\r\n        type: types.ADD_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: types.DELETE_TODO,\r\n        payload: id\r\n    }\r\n}\r\nexport const editTodo = (todo) => {\r\n    return {\r\n        type: types.EDIT_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nexport const changeCheckItemStatus = (todoId, itemId) => {\r\n    return {\r\n        type: types.CHANGE_ITEM_STATUS,\r\n        payload: {todoId, itemId}\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Card, Button, CardHeader, CardBody, CardTitle, Col } from 'reactstrap';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport ToggleTextCard from '../ToggleTextCard/ToggleTextCard';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo } from '../../Redux/Todo/Todo.action';\r\nimport './CardTodo.css'\r\n\r\n\r\nfunction CardTodo({ item, deleteTodo }) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownId, setDropdownId] = useState(null)\r\n    const toggle = (id) => {\r\n        setDropdownOpen(prevState => !prevState);\r\n        setDropdownId(id)\r\n    };\r\n\r\n    const [toggleId, setToggleId] = useState(null)\r\n    const [toggleShow, setToggleShow] = useState(false)\r\n    const toggleButton = (id) => {\r\n        setToggleId(id);\r\n        setToggleShow(!toggleShow)\r\n    }\r\n\r\n    return (\r\n        <Col className=\"py-3 px-0 p-md-3\">\r\n            <Card>\r\n                <CardHeader className=\"d-flex justify-content-between\">\r\n                    <p>{item.title}</p>\r\n                    <Dropdown isOpen={dropdownOpen} toggle={() => toggle(item.id)}>\r\n                        <DropdownToggle caret>\r\n                            Actions\r\n                        </DropdownToggle>\r\n                        {\r\n                            dropdownOpen && dropdownId == item.id ?\r\n                                <DropdownMenu>\r\n                                    <DropdownItem><Link to={`/edit/${item.id}`} className=\"editDropdownItem\">Edit</Link></DropdownItem>\r\n                                    <DropdownItem onClick={() => deleteTodo(item.id)}>Delete</DropdownItem>\r\n                                </DropdownMenu>\r\n                                : <div></div>\r\n                        }\r\n\r\n                    </Dropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <CardTitle>{item.text}</CardTitle>\r\n                    <Button onClick={() => toggleButton(item.id)}>Toggle</Button>\r\n                    {\r\n                        toggleId == item.id && toggleShow ?\r\n                            <ol>\r\n                                {item.checkList.map(checkItem =>\r\n                                    <ToggleTextCard item={item} checkItem={checkItem} key={checkItem.id} />\r\n                                )}\r\n                            </ol>\r\n                            : <div></div>\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        </Col>\r\n\r\n    )\r\n}\r\n\r\nexport default connect(null, { deleteTodo })(CardTodo);\r\n","import React from 'react'\r\n\r\nfunction DoneList({item}) {\r\n    return (\r\n        <div>\r\n            {item.checkList.map(checkItem =>\r\n                checkItem.status ? <li key={checkItem.id}>{checkItem.text}</li> : null\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoneList\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Card, CardHeader, CardBody } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport Search from '../Search/Search'\r\nimport CardTodo from '../CardTodo/CardTodo';\r\nimport './Todo.css';\r\nimport DoneList from '../DoneList/DoneList';\r\n\r\n//material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PlaylistAddCheckRoundedIcon from '@material-ui/icons/PlaylistAddCheckRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport PlaylistAddRoundedIcon from '@material-ui/icons/PlaylistAddRounded';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"auto\",\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    borderButIcon: {\r\n        borderRight: \"2px solid rgba(0,0,0,.03)\",\r\n    },\r\n    butIcon:{\r\n    }\r\n});\r\n\r\nfunction Todo({ todoList }) {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        setSearch(value);\r\n    }\r\n\r\n    let searchTodo = todoList.filter(item => item.title.toLowerCase().startsWith(search.toLowerCase()));\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    return (\r\n        <div className=\"border rounded mx-lg-5\">\r\n\r\n            <Card className=\"\">\r\n                <CardHeader className=\"px-2\">\r\n                    <BottomNavigation value={value} onChange={(event, newValue) => { setValue(newValue) }} showLabels className={classes.root + \" col-12 col-sm-8 col-lg-6 col-xl-5 px-0 rounded\"} >\r\n                        <BottomNavigationAction className={classes.borderButIcon + \" px-0 px-sm-3\"}  label=\"TodoList\" icon={<PlaylistAddCheckRoundedIcon />} />\r\n                        <BottomNavigationAction className={classes.borderButIcon + \" px-0 px-sm-3\"} label=\"DoneList\" icon={<DoneAllRoundedIcon />} />\r\n                        <BottomNavigationAction className={classes.borderButIcon + \" px-0 px-sm-3\"} label=\"Search\" icon={<SearchRoundedIcon />} />\r\n                        <Link to={\"/add\"} ><BottomNavigationAction className={classes.butIcon + \" px-0 px-sm-3\"} label=\"Add todo\" icon={<PlaylistAddRoundedIcon />} /></Link>\r\n                    </BottomNavigation>\r\n                </CardHeader>\r\n                <CardBody className=\"py-3\">\r\n                    <Search handleChange={handleChange} search={search} />\r\n\r\n                    <Row className=\"justify-content-left px-5\" xs={1} lg={2}>\r\n                        {\r\n                            searchTodo.map(item =>\r\n                                <CardTodo item={item} key={item.id} />\r\n                            )\r\n                        }\r\n                    </Row>\r\n                    <Card className=\"mx-5\">\r\n                        <CardHeader>DoneList</CardHeader>\r\n                        <CardBody>\r\n                            {\r\n                                searchTodo.map(item =>\r\n                                    <div key={item.id}>\r\n                                        <h3>{item.title}</h3>\r\n                                        <ol>\r\n                                            <DoneList item={item} />\r\n                                        </ol>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </CardBody>\r\n\r\n            </Card>\r\n            {/* <Link to={\"/add\"}><button className=\"btn btn-primary add-button\">Add</button></Link> */}\r\n        </div >\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoList: state.todoList.todo_List,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(Todo);\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Todo from '../../Component/Todo/Todo';\r\n\r\n\r\nfunction TodoArchive() {\r\n    return (\r\n        <Todo/>\r\n    )\r\n}\r\n\r\nexport default TodoArchive\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Form, Input, FormGroup, Label, Button, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { useSelector } from 'react-redux'\r\nimport { connect } from 'react-redux';\r\nimport { addTodo, editTodo } from '../../Redux/Todo/Todo.action';\r\n\r\nfunction AddTodo({ addTodo, length, editTodo }) {\r\n    const history = useHistory();\r\n    const { todoId } = useParams();\r\n\r\n    const editObject = useSelector(state => state.todoList.todo_List.find(item => item.id == todoId)) //todoId = useParams\r\n    const [todos, setTodos] = useState(editObject ? { title: editObject.title, text: editObject.text } : {\r\n        title: \"\",\r\n        text: \"\",\r\n    })\r\n\r\n    const [checkItem, setCheckItem] = useState(editObject ? editObject.checkList : [{\r\n        id: 1,\r\n        text: \"\",\r\n        status: false\r\n    }])\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setTodos({ ...todos, [name]: value })\r\n    }\r\n    const handleChangeItem = (event, id) => {\r\n        setCheckItem(checkItem.map(item => item.id == id ? { ...item, text: event.target.value } : item))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        editObject && editTodo({ id: editObject.id, ...todos, checkList: checkItem });\r\n\r\n        !editObject && addTodo({ id: length + 1, ...todos, checkList: checkItem })\r\n\r\n        history.push('/')\r\n    }\r\n    const addCheckItem = () => {\r\n        setCheckItem([...checkItem, { id: checkItem.length + 1, text: checkItem.text, status: false }])\r\n    }\r\n    const handleClear = () => {\r\n        // setTodos({\r\n        //     title: \"\",\r\n        //     text: \"\",\r\n        // })\r\n    }\r\n    return (\r\n        <Form className=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-4 mx-auto mt-5 p-3\" onSubmit={handleSubmit}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"title\" className=\"mb-0\">Title:</Label>\r\n                        <Input placeholder='title' type=\"text\" name='title' id='title' value={todos.title} onChange={handleChange} />\r\n                    </FormGroup>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"text\" className=\"mb-0\">Text:</Label>\r\n                        <Input placeholder='text' type=\"text\" name='text' id='text' value={todos.text} onChange={handleChange} />\r\n                    </FormGroup>\r\n                    {checkItem.map(item =>\r\n                        <div key={item.id}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"checkItem\" className=\"mb-0\">Check list {item.id}</Label>\r\n                                <Input placeholder={`Check list ${item.id}`} type=\"text\" name='checkItem' id='checkItem' value={item.text} onChange={(e) => handleChangeItem(e, item.id)} />\r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <Button color='success' className=\"border\" type=\"submit\">save</Button> {' '}\r\n                    <Button color='primary' className=\"border\" type=\"button\" onClick={addCheckItem} >add check list</Button> {' '}\r\n                    <Button type=\"reset\" className=\"border\" onClick={handleClear}>clear</Button>\r\n                </CardFooter>\r\n\r\n\r\n\r\n            </Card>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        length: state.todoList.todo_List.length,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { addTodo, editTodo })(AddTodo);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {store} from './Redux/store';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport TodoArchive from './view/TodoArchive/TodoArchive';\nimport AddTodo from './view/AddTodo/AddTodo';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Switch>\n            <Route path=\"/edit/:todoId\">\n                <AddTodo />\n              </Route>\n              <Route exact path=\"/add\">\n                <AddTodo />\n              </Route>\n              <Route path=\"/\">\n                <TodoArchive />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}